plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

loom {
    //accessWidenerPath = project(":common").loom.accessWidenerPath
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common
}

dependencies {
    shadowCommon(implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.0'))
    shadow(forgeRuntimeLibrary(implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.0')))
    neoForge "net.neoforged:neoforge:${rootProject.neoforge_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-neoforge:${rootProject.architectury_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionNeoForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraftVersion", project.minecraft_version
    inputs.property "architecturyVersion", project.architectury_version
    inputs.property "neoForgeVersion", project.neoforge_version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version,
                "minecraftVersion": project.minecraft_version,
                "architecturyVersion": project.architectury_version,
                "neoForgeVersion": project.neoforge_version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

repositories {
    maven { url "https://maven.neoforged.net/releases" }
}
